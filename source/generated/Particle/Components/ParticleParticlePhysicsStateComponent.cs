//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ParticleEntity {

    public Particle.PhysicsStateComponent particlePhysicsState { get { return (Particle.PhysicsStateComponent)GetComponent(ParticleComponentsLookup.ParticlePhysicsState); } }
    public bool hasParticlePhysicsState { get { return HasComponent(ParticleComponentsLookup.ParticlePhysicsState); } }

    public void AddParticlePhysicsState(KMath.Vec2f newPosition, KMath.Vec2f newPreviousPosition, KMath.Vec2f newDrawPosition, KMath.Vec2f newAcceleration, KMath.Vec2f newVelocity, float newRotation, bool newIntersect, bool newBounce, KMath.Vec2f newBounceFactor, KMath.Vec2f newDebrisOffset) {
        var index = ParticleComponentsLookup.ParticlePhysicsState;
        var component = (Particle.PhysicsStateComponent)CreateComponent(index, typeof(Particle.PhysicsStateComponent));
        component.Position = newPosition;
        component.PreviousPosition = newPreviousPosition;
        component.DrawPosition = newDrawPosition;
        component.Acceleration = newAcceleration;
        component.Velocity = newVelocity;
        component.Rotation = newRotation;
        component.Intersect = newIntersect;
        component.Bounce = newBounce;
        component.BounceFactor = newBounceFactor;
        component.DebrisOffset = newDebrisOffset;
        AddComponent(index, component);
    }

    public void ReplaceParticlePhysicsState(KMath.Vec2f newPosition, KMath.Vec2f newPreviousPosition, KMath.Vec2f newDrawPosition, KMath.Vec2f newAcceleration, KMath.Vec2f newVelocity, float newRotation, bool newIntersect, bool newBounce, KMath.Vec2f newBounceFactor, KMath.Vec2f newDebrisOffset) {
        var index = ParticleComponentsLookup.ParticlePhysicsState;
        var component = (Particle.PhysicsStateComponent)CreateComponent(index, typeof(Particle.PhysicsStateComponent));
        component.Position = newPosition;
        component.PreviousPosition = newPreviousPosition;
        component.DrawPosition = newDrawPosition;
        component.Acceleration = newAcceleration;
        component.Velocity = newVelocity;
        component.Rotation = newRotation;
        component.Intersect = newIntersect;
        component.Bounce = newBounce;
        component.BounceFactor = newBounceFactor;
        component.DebrisOffset = newDebrisOffset;
        ReplaceComponent(index, component);
    }

    public void RemoveParticlePhysicsState() {
        RemoveComponent(ParticleComponentsLookup.ParticlePhysicsState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ParticleMatcher {

    static Entitas.IMatcher<ParticleEntity> _matcherParticlePhysicsState;

    public static Entitas.IMatcher<ParticleEntity> ParticlePhysicsState {
        get {
            if (_matcherParticlePhysicsState == null) {
                var matcher = (Entitas.Matcher<ParticleEntity>)Entitas.Matcher<ParticleEntity>.AllOf(ParticleComponentsLookup.ParticlePhysicsState);
                matcher.componentNames = ParticleComponentsLookup.componentNames;
                _matcherParticlePhysicsState = matcher;
            }

            return _matcherParticlePhysicsState;
        }
    }
}
